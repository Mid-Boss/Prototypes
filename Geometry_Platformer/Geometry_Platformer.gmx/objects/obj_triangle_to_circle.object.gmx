<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_triangle_to_circle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_collision_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var A= physics_fixture_create();
var B= physics_fixture_create();
var C= physics_fixture_create();
var D= physics_fixture_create();
physics_fixture_set_edge_shape(A, 0, 0, 0, 136);
physics_fixture_set_edge_shape(B, 64, 0, 64, 136);
physics_fixture_set_edge_shape(C, 0, 136, 15.8, 164);
physics_fixture_set_edge_shape(D, 64, 136, 48.2, 164);
physics_fixture_set_density(A, 0);
physics_fixture_set_restitution(A, 0);
physics_fixture_set_friction(A, 1);
physics_fixture_set_angular_damping(A, 1);
physics_fixture_set_linear_damping(A, 1);
physics_fixture_bind(A, id);
physics_fixture_bind(B, id);
physics_fixture_bind(C, id);
physics_fixture_bind(D, id);
physics_fixture_delete(A);
physics_fixture_delete(B);
physics_fixture_delete(C);
physics_fixture_delete(D);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ocollide = instance_position(x+sprite_width/2, y+sprite_height/2, obj_triangle);
ocollide_triangle = instance_position(x+sprite_width/2, y+sprite_height/2, obj_triangle);
if ocollide != noone
{
    with (ocollide)
        instance_destroy();
}
if ocollide_triangle != noone
{
    instance_create(x+sprite_width/2-sprite_get_width(obj_circle)/2
                    , y+sprite_height/2-sprite_get_height(obj_circle)/2
                    , obj_circle);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
